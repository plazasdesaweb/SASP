@model IList<Suma2Lealtad.Models.DetalleOrdenRecargaPrepago>
@{
    ViewBag.Title = "DetalleOrden";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style type="text/css" media="screen">
    .table-hover {
        cursor: pointer;
    }

    .table tbody tr.active td {
        background-color: #5e8262; /*#476B6B #29A329;*/
        color: white;
    }
</style>

@{
    string indicadorGuardar;
    if (Session["RoleLevel"].ToString() == "3")
    {
        if (Model.First().statusOrden == "Nueva")
        {
            indicadorGuardar = "Aprobar";
        }
        else
        {
            indicadorGuardar = "Guardar";
        }
    }
    else
    {
        indicadorGuardar = "Guardar";
    }
}

<div class="form-group">

    <div class="panel panel-default">

        <div class="panel-heading clearfix panel-gradient">
            <h3 class="panel-title">Suma / Ordenes / Detalle de la Orden</h3>
        </div>

        <div class="panel-body">

            <div class="editor-label col-md-4 control-label">
                <br />
            </div>
            <div class="editor-field col-md-8">
                <br />
            </div>

            <form id="commentForm" method="post" action="@Url.Action("AprobarOrden", "OrdenRecargaSuma", new { id = Model.First().idOrden, indicadorGuardar = @indicadorGuardar })" class="form-horizontal" onsubmit="return actualizarRecargas();">

                @* <div class="editor-label col-md-4 control-label">
                    Cliente :
                </div>

                <div class="editor-field col-md-6">
                    @Html.TextBoxFor(model => model.First().nameCliente, new { @class = "form-control", @readonly = "true" })
                </div>

                <div class="editor-label col-md-4 control-label">
                    RIF :
                </div>
                <div class="editor-form col-md-6">
                    @Html.TextBoxFor(model => model.First().rifCliente, new { @class = "form-control", @readonly = "true" })
                </div>
                <div class="editor-label col-md-4 control-label">
                    Teléfono :
                </div>
                <div class="editor-form col-md-6">
                    @Html.TextBoxFor(model => model.First().phoneCliente, new { @class = "form-control", @readonly = "true" })
                </div>

                <div class="editor-label col-md-4 control-label"></div>
                <div class="editor-field col-md-8">
                    <br />
                </div>*@

                <div class="editor-label col-md-4 control-label">
                    Nro. de Orden :
                </div>

                <div class="editor-form col-md-6">
                    @Html.TextBoxFor(model => model.First().idOrden, new { @class = "form-control", @readonly = "true" })
                </div>

                <div class="editor-label col-md-4 control-label">
                    Estatus de la Orden :
                </div>

                <div class="editor-form col-md-6">
                    @Html.TextBoxFor(model => model.First().statusOrden, new { @class = "form-control", @readonly = "true" })
                </div>

                <div class="editor-label col-md-4 control-label">
                    Clase de Orden :
                </div>

                <div class="editor-form col-md-6">
                    @Html.TextBoxFor(model => model.First().tipoOrden, new { @class = "form-control", @readonly = "true" })
                </div>

                <div class="editor-label col-md-4 control-label">
                    Documento de Referencia :
                </div>

                <div class="editor-form col-md-6">
                    @Html.TextBoxFor(model => model.First().documentoOrden, new { @class = "form-control Referencia" })
                    <span id="field5"></span>
                </div>

                <div class="editor-label col-md-4 control-label">
                    Observaciones :
                </div>

                <div class="editor-form col-md-4">
                    @Html.TextBoxFor(model => model.First().observacionesOrden, new { @class = "form-control Observaciones2" })
                </div>

                <div class="editor-label col-md-2 control-label">
                    <a id="CopiarMotivo" class="btn btn-success btn-md" role="button">Copiar Motivo</a>                
                </div>

                <div class="editor-label col-md-4 control-label"></div>
                <div class="editor-field col-md-6">
                    <br />
                </div>

                <div class="editor-label col-md-4 control-label"></div>
                <div class="editor-field col-md-6">
                    <br />
                </div>

                @{ if (Model.First().statusOrden == "Nueva" && Model.First().tipoOrden != "Orden de Anulación de Recarga Suma" && Model.First().tipoOrden != "Orden de Anulación de Acreditación Suma")
                   {                
                <div class="editor-label col-md-4 control-label">
                    Número de Documento/Cédula :
                </div>

                <div class="editor-field col-md-4">
                    <input type="text" id="numdoc" name="numdoc" value="" maxlength="12" placeholder="V-12345678" class="form-control">
                    <span id="documento"></span>
                </div>

                <div class="editor-label col-md-2 control-label">
                    <a id="BuscarAfiliado" class="btn btn-success btn-md" role="button">Buscar Afiliado</a>
                </div>

                <div class="editor-label col-md-4 control-label"></div>
                <div class="editor-field col-md-6">
                    <br />
                </div>
                }
                }

                <table id="detalleOrden" class="table table-hover">

                    <thead>
                        <tr>
                            <th>Número de Documento/Cédula</th>
                            <th>Nombre</th>
                            <th>Monto</th>
                            <th>Estatus</th>
                            <th>Observaciones</th>
                            <th>Motivo</th>
                            <th class="text-center"></th>
                        </tr>
                    </thead>

                    <tbody>

                        @for (int i = 0; i < Model.Count; i++)
                        {     
                            <tr data-row-key="@Model[i].idAfiliado">

                                @Html.HiddenFor(modelItem => Model[i].idAfiliado)
                                @Html.HiddenFor(modelItem => Model[i].idOrden)

                                @*<td>
                                     @Html.DisplayFor(modelItem => item.beneficiario.Afiliado.type, new { @class = "form-control" })
                                </td>*@

                                <td>
                                    @Html.HiddenFor(modelItem => Model[i].docnumberAfiliado)
                                    @Html.DisplayFor(modelItem => Model[i].docnumberAfiliado, new { @class = "form-control" })
                                </td>

                                <td>
                                    @Html.HiddenFor(modelItem => Model[i].nameAfiliado)
                                    @Html.HiddenFor(modelItem => Model[i].lastname1Afiliado)
                                    @Html.DisplayFor(modelItem => Model[i].nameAfiliado) @Html.DisplayFor(modelItem => Model[i].lastname1Afiliado)
                                </td>

                                <td>
                                    @Html.HiddenFor(modelItem => Model[i].montoRecarga)
                                    @if (Model[i].tipoOrden == "Orden de Recarga Suma" || Model[i].tipoOrden == "Orden de Anulación de Recarga Suma")
                                    {
                                        @Html.DisplayFor(modelItem => Model[i].montoRecarga, new { @class = "form-control Monto" })
                                    }
                                    else
                                    {
                                        @(String.Format("{0}", Math.Truncate(Model[i].montoRecarga)))
                                    }

                                </td>

                                <td>
                                    @Html.HiddenFor(modelItem => Model[i].statusDetalleOrden)
                                    @Html.DisplayFor(modelItem => Model[i].statusDetalleOrden, new { @class = "form-control" })
                                </td>

                                <td>
                                    @{if (Model.First().statusOrden == "Nueva")
                                      {
                                        <p class="ObservacionesInicial">@Html.DisplayFor(modelItem => Model[i].observacionesExclusion)</p>                                           
                                        @Html.TextBoxFor(modelItem => Model[i].observacionesExclusion, new { @class = "form-control Observaciones" })                                          
                                      }
                                      else if (Model[i].statusDetalleOrden == "Procesado")
                                      {
                                          if (Model[i].resultadoRecarga == "0")
                                          {
                                        @Html.DisplayFor(modelItem => Model[i].observacionesExclusion) 
                                          }
                                          else
                                          {
                                        @(String.Format("{0} ({1})", Model[i].observacionesExclusion, Model[i].resultadoRecarga))
                                          }
                                      }
                                      else
                                      {
                                        @Html.DisplayFor(modelItem => Model[i].observacionesExclusion)                                     
                                      }
                                    }
                                </td>

                                <td>
                                    @Html.TextBoxFor(modelItem => Model[i].observacionesDetalle, new { @class = "form-control Motivo" }) 
                                </td>

                                @{if (Model.First().tipoOrden != "Orden de Anulación de Recarga Suma" && Model.First().tipoOrden != "Orden de Anulación de Acreditación Suma")
                                  {
                                      if (Model.First().statusOrden == "Nueva")
                                      {
                                          if (Model[i].statusDetalleOrden == "Incluido")
                                          {
                                    <td class="text-right" onclick="Excluir(this)">
                                        <a class="btn btn-danger btn-sm">
                                            <span class="glyphicon glyphicon-remove"></span>
                                        </a>
                                    </td>
                                          }
                                          else
                                          {
                                    <td class="text-right" onclick="Incluir(this)">
                                        <a class="btn btn-success btn-sm">
                                            <span class="glyphicon glyphicon-plus"></span>
                                        </a>
                                    </td>
                                          }
                                      }
                                  }
                                }
                            </tr>                 
                        }
                    </tbody>

                </table>

                <div class="editor-label col-md-4 control-label">
                    @{
                        if (Model.First().tipoOrden == "Orden de Recarga Suma" || @Model.First().tipoOrden == "Orden de Anulación de Recarga Suma")
                        {
                            @:Total Recargas :
                        }
                        else
                        {
                            @:Total Acreditaciones :
                        }
                    }
                </div>

                <div class="editor-form col-md-6">
                    <input type="text" id="TotalRecargas" name="TotalRecargas" value="" maxlength="10" class="form-control" readonly="true">
                </div>

                <div class="editor-label col-md-4 control-label">
                    @{
                        if (Model.First().tipoOrden == "Orden de Recarga Suma" || @Model.First().tipoOrden == "Orden de Anulación de Recarga Suma")
                        {
                            @:Monto Total Recargas :
                        }
                        else
                        {
                            @:Monto Total Acreditaciones :
                        }
                    }
                </div>

                <div class="editor-form col-md-6">
                    <input type="text" id="MontoTotalRecargas" name="MontoTotalRecargas" value="" maxlength="10" class="form-control" readonly="true">
                </div>

                <div class="editor-form col-md-6">
                    <input type="text" id="DocumentoReferencia" name="DocumentoReferencia" value="" maxlength="10" class="form-control" style="visibility: hidden">
                </div>

                <div class="editor-form col-md-6">
                    <input type="text" id="Observaciones" name="Observaciones" value="" maxlength="100" class="form-control" style="visibility: hidden">
                </div>

                <div class="editor-label col-md-4 control-label">
                    <br />
                </div>
                <div class="editor-field col-md-8">
                    <br />
                </div>

                <!-- SECCION PARA botones de operaciones -->
                <div class="col-md-12 col-btn">
                    <div class="pull-right">
                        @{if (Model.First().statusOrden == "Nueva")
                          {
                              if (@indicadorGuardar == "Aprobar")
                              {                            
                            <input id="Aprobar" type="submit" class="btn btn-success btn-md" value="Aprobar Orden" />
                            <a id="Rechazar" href="@Url.Action("RechazarOrden", "OrdenRecargaSuma", new { id = Model.First().idOrden })" class="btn btn-success btn-md">Rechazar Orden</a>
                              }
                              else
                              {                                  
                            <input id="Guardar" type="submit" class="btn btn-success btn-md" value="Guardar Orden" />                                
                              }
                          }
                          else if (Model.First().statusOrden == "Aprobada")
                          {
                            <a href="@Url.Action("ProcesarOrden", "OrdenRecargaSuma", new { id = Model.First().idOrden })" class="btn btn-success btn-md">Procesar Orden</a>
                          }
                          else if (Model.First().statusOrden == "Procesada")
                          {
                            <input id="Guardar" type="submit" class="btn btn-success btn-md" value="Guardar Orden" />
                          }
                        }
                        <a href="@Url.Action("FilterReview", "OrdenRecargaSuma")" class="btn btn-danger btn-md">Regresar</a>
                    </div>
                </div>

            </form>

        </div>
        <!-- panel-body -->

    </div>
    <!-- panel -->

</div>

<script>
    $(document).ready(function () {
        $(".Observaciones").hide();
        actualizarRecargas()
    });

    function Excluir(elemento) {
        var filatabla = $(elemento).closest('tr');
        var html;
        $(filatabla).children("td").each(function (index2) {
            switch (index2) {
                case 3:
                    html = $(this).html();
                    html = $.trim(html);
                    html = html.replace("Incluido", "Excluido");
                    html = html.replace("Incluido", "Excluido");
                    $(this).html(html);
                    break;
                case 4:
                    $(this).children(".ObservacionesInicial").hide();
                    //$(this).children(".Observaciones").show();
                    $(this).children("input").val("");
                    $(this).children("input").show();
                    $(this).children("input").focus();
                    break;
                case 6:
                    $(this).attr("onclick", "Incluir(this)");
                    $(this).html('<a class="btn btn-success btn-sm"><span class="glyphicon glyphicon-plus"></span></a>');
                    break;
            }
        });
        actualizarRecargas();
    };

    function Incluir(elemento) {
        var filatabla = $(elemento).closest('tr');
        $(filatabla).children("td").each(function (index2) {
            switch (index2) {
                case 3:
                    html = $(this).html();
                    html = $.trim(html);
                    html = html.replace("Excluido", "Incluido");
                    html = html.replace("Excluido", "Incluido");
                    $(this).html(html);
                    break;
                case 4:
                    $(this).children(".ObservacionesInicial").hide();
                    //$(this).children(".Observaciones").show();
                    $(this).children("input").val("");
                    $(this).children("input").hide();
                    break;
                case 6:
                    $(this).attr("onclick", "Excluir(this)");
                    $(this).html('<a class="btn btn-danger btn-sm"><span class="glyphicon glyphicon-remove"></span></a>');
                    break;
            }
        });
        actualizarRecargas();
    };

    function spanMessage(idelemento, mensaje) {
        var span = document.getElementById(idelemento);
        if (span != null) {
            while (span.firstChild) {
                span.removeChild(span.firstChild);
            }
            span.appendChild(document.createTextNode(mensaje));
        }
    }

    function validateReferencia() {
        var Referencia = $(".Referencia").val();
        if (Referencia.length == 0) {
            return true;
        }
        var RegExPattern = /^([0-9])*$/;
        if (RegExPattern.test(Referencia) == false) {
            spanMessage('field5', '* Formato Incorrecto. Debe ingresar sólo números.');
            $(".Referencia").val("");
            $(".Referencia").focus();
            return false;
        }
        document.getElementById('field5').value = "";
        return true;
    }

    function actualizarRecargas() {
        var TotalRecargas = 0;
        var MontoTotalRecargas = parseFloat("0");
        $("#detalleOrden tbody tr").each(function (index) {
            var campo3 = 0;
            var campo4;
            $(this).children("td").each(function (index2) {
                switch (index2) {
                    case 2:
                        //temp = $(this).text();
                        //temp = temp.replace(",", ".");
                        //campo3 = parseFloat(temp);
                        //break;
                        if ($(this).find('.Monto').val() != "" && typeof ($(this).find('.Monto').val()) !== "undefined") {
                            temp = $(this).find('.Monto').val().toString();
                            temp = temp.replace(",", ".");
                            if ("@Model.First().tipoOrden" == "Orden de Recarga Suma" || "@Model.First().tipoOrden".replace("&#243;", "ó") == "Orden de Anulación de Recarga Suma") {
                                campo3 = parseFloat(temp);
                                $(this).find('.Monto').val(temp.replace(".", ","));
                            }
                            else {
                                campo3 = parseFloat(temp).toFixed(0);
                                $(this).find('.Monto').val(campo3.toString().replace(".", ","));
                            }
                        }
                        else if (typeof ($(this).find('.Monto').val()) === "undefined") {
                            temp = $(this).text();
                            temp = temp.replace(",", ".");
                            if ("@Model.First().tipoOrden" == "Orden de Recarga Suma" || "@Model.First().tipoOrden".replace("&#243;", "ó") == "Orden de Anulación de Recarga Suma") {
                                campo3 = parseFloat(temp);
                                //$(this).val(temp.replace(".", ","));
                            }
                            else {
                                campo3 = parseFloat(temp).toFixed(0);
                                //$(this).val(campo3.toString().replace(".", ","));
                            }
                        }
                        break;
                    case 3:
                        campo4 = $.trim($(this).text());
                        break;
                        //case 4:
                        //    if ($(this).children("input").val() != "") {
                        //        $(this).children("input").show();
                        //    }
                        //    break;
                }
            });
            if (campo4 != "Excluido" && campo4 != "") {
                TotalRecargas = TotalRecargas + 1;
                MontoTotalRecargas = parseFloat(MontoTotalRecargas) + parseFloat(campo3);
            }
        });
        if (TotalRecargas == 0) {
            $("#Aprobar").hide();
        }
        else if ("@Model.First().statusOrden" == "Aprobada") {
            $("#Aprobar").hide();
        }
        else {
            $("#Aprobar").show();
        }
        document.getElementById('TotalRecargas').value = TotalRecargas;
        if ("@Model.First().tipoOrden" == "Orden de Recarga Suma" || "@Model.First().tipoOrden".replace("&#243;", "ó") == "Orden de Anulación de Recarga Suma") {
            document.getElementById('MontoTotalRecargas').value = MontoTotalRecargas.toFixed(2).toString().replace(".", ",");
        }
        else {
            document.getElementById('MontoTotalRecargas').value = parseFloat(MontoTotalRecargas).toFixed(0).toString()
        }
        document.getElementById('DocumentoReferencia').value = $(".Referencia").val();
        document.getElementById('Observaciones').value = $(".Observaciones2").val();
        return validateReferencia();
    }

    function LimpiarSpanMessage(idelemento) {
        var span = document.getElementById(idelemento);
        if (span != null) {
            while (span.firstChild) {
                span.removeChild(span.firstChild);
            }
        }
    }

    function validateNumDoc() {
        var numdoc = document.getElementById('numdoc').value;
        var valor = document.getElementById('numdoc').value.trim();
        if (numdoc.length == 0) {
            return false;
        }
        var RegExPattern = /^([VvEe]){1}(-){1}(\d){3,8}$/;
        var RegExPattern2 = /^([VvEe]){1}(\d){3,8}$/;
        var RegExPattern3 = /^([Pp]){1}(-){1}([A-Za-z0-9]){3,10}$/;
        var RegExPattern4 = /^([Pp]){1}([A-Za-z0-9]){3,10}$/;
        var RegExPattern5 = /^([VvEeJjGg]){1}(-){1}(\d){9}$/;
        var RegExPattern6 = /^([VvEeJjGg]){1}(\d){9}$/;
        if (RegExPattern.test(valor) == false && RegExPattern2.test(valor) == false && RegExPattern3.test(valor) == false && RegExPattern4.test(valor) == false && RegExPattern5.test(valor) == false && RegExPattern6.test(valor) == false) {
            spanMessage('documento', "* Formato Número de Documento/Cédula Incorrecto. (ejemplos V-12345678, J-123456789, P-ABC1234567)");
            document.getElementById('numdoc').value = "";
            document.getElementById('numdoc').focus();
            return false;
        }
        else if (RegExPattern.test(valor) != false) {
            document.getElementById('numdoc').value = valor.toUpperCase();
            spanMessage('documento', "");
            return true;
        }
        else if (RegExPattern2.test(valor) != false) {
            document.getElementById('numdoc').value = valor.substring(0, 1).toUpperCase() + "-" + valor.substring(1).toUpperCase();
            spanMessage('documento', "");
            return true;
        }
        else if (RegExPattern3.test(valor) != false) {
            document.getElementById('numdoc').value = valor.toUpperCase();
            document.getElementById('documento').value = "";
            return true;
        }
        else if (RegExPattern4.test(valor) != false) {
            document.getElementById('numdoc').value = valor.substring(0, 1).toUpperCase() + "-" + valor.substring(1).toUpperCase();
            spanMessage('documento', "");
            return true;
        }
        else if (RegExPattern5.test(valor) != false) {
            document.getElementById('numdoc').value = valor.toUpperCase();
            spanMessage('documento', "");
            return true;
        }
        else if (RegExPattern6.test(valor) != false) {
            document.getElementById('numdoc').value = valor.substring(0, 1).toUpperCase() + "-" + valor.substring(1).toUpperCase();
            spanMessage('documento', "");
            return true;
        }
    }

    $(".Monto").on("input", function () {
        //alert("Change to " + this.value);
        ValidarMontos();
    });

    function ValidarMontos() {
        var MontoTotalRecargas = parseFloat("0");
        var TotalRecargas = 0;
        var resultado = true;
        var html;
        $("#detalleOrden tbody tr").each(function (index) {
            var RegExPattern = /^\d+(\.\d{1,2})?$/;
            var idrow = $(this).data("row-key");
            var temp;
            var campo3 = 0;
            $(this).children("td").each(function (index2) {
                switch (index2) {
                    case 2:
                        if ($(this).find('.Monto').val() != "" && typeof ($(this).find('.Monto').val()) !== "undefined") {
                            temp = $(this).find('.Monto').val().toString();
                            temp = temp.replace(",", ".");
                            if ("@Model.First().tipoOrden" == "Orden de Recarga Suma" || "@Model.First().tipoOrden".replace("&#243;", "ó") == "Orden de Anulación de Recarga Suma") {
                                campo3 = parseFloat(temp);
                                $(this).find('.Monto').val(temp.replace(".", ","));
                            }
                            else {
                                campo3 = parseFloat(temp).toFixed(0);
                                $(this).find('.Monto').val(campo3.toString().replace(".", ","));
                            }
                        }
                        else if (typeof ($(this).find('.Monto').val()) === "undefined") {
                            temp = $(this).text();
                            temp = temp.replace(",", ".");
                            if ("@Model.First().tipoOrden" == "Orden de Recarga Suma" || "@Model.First().tipoOrden".replace("&#243;", "ó") == "Orden de Anulación de Recarga Suma") {
                                campo3 = parseFloat(temp);
                                //$(this).val(temp.replace(".", ","));
                            }
                            else {
                                campo3 = parseFloat(temp).toFixed(0);
                                //$(this).val(campo3.toString().replace(".", ","));
                            }
                        }
                        break;
                    case 3:
                        if ($.trim($(this).text()) != "No encontrado") {
                            if (campo3 != parseFloat("0")) {

                                html = '<input name="[' + index + '].statusDetalleOrden" type="hidden" value="Incluido" />Incluido'
                                $(this).html(html);

                                LimpiarSpanMessage('field_' + idrow);
                                if (RegExPattern.test(campo3) == false) {
                                    spanMessage('field_' + idrow, '* Monto invalido');
                                    resultado = false;
                                }
                                //PARA VERIFICAR PARAMETROS ESTABLECIDOS - UNA VEZ SE DEFINA EL ESQUEMA
                                //else if (campo3 > parseFloat("5000")) {
                                //    spanMessage('field_' + idrow, '* El monto excede el valor máximo permitido (5000)');
                                //    resultado = false;
                                //}
                                TotalRecargas = TotalRecargas + 1;
                                MontoTotalRecargas = parseFloat(MontoTotalRecargas) + parseFloat(campo3);
                            }
                            else {
                                html = '<input name="[' + index + '].statusDetalleOrden" type="hidden" value="" />'
                                $(this).html(html);
                                spanMessage('field_' + idrow, '* No incluye recarga');
                            }
                        }
                        break;                    
                }
            });
            document.getElementById('TotalRecargas').value = TotalRecargas;
            if ("@Model.First().tipoOrden" == "Orden de Recarga Suma" || "@Model.First().tipoOrden".replace("&#243;", "ó") == "Orden de Anulación de Recarga Suma") {
                document.getElementById('MontoTotalRecargas').value = MontoTotalRecargas.toFixed(2).toString().replace(".", ",");
            }
            else {
                document.getElementById('MontoTotalRecargas').value = parseFloat(MontoTotalRecargas).toFixed(0).toString();
            }
        });
        return resultado;
    }

    $("#BuscarAfiliado").on("click", function () {
        //alert("Change to " + this.value);
        if (validateNumDoc()) {
            var docnumber = $('#numdoc').val();
            incluirfila(docnumber);
        }
    });

    function buscarAfiliado(docnumber) {
        var resultado = false;
        $("#detalleOrden tbody tr").each(function (index) {
            var campo1;
            $(this).children("td").each(function (index2) {
                switch (index2) {
                    case 0:
                        campo1 = $(this).text();
                        if (campo1.indexOf(docnumber) !== -1) {
                            resultado = true;
                            break;
                            //case 1: campo2 = $(this).text();
                            //    break;
                            //case 2: campo3 = $(this).text();
                            //    break;
                        }
                }
            });
        });
        return resultado;
    }

    function incluirfila(docnumber) {
        var vacio = true;
        $.getJSON('@Url.Action("/FindAfiliado/")' + '?docnumber=' + docnumber, function (data) {
        $.each(data, function (i, record) {
            vacio = false;
            if (buscarAfiliado(docnumber) == true) {
                $('#numdoc').val("");
                spanMessage('documento', "El Afiliado con  Número de Documento/Cédula " + docnumber + " ya está incluido en la lista");
            }
            else {
                LimpiarSpanMessage('documento');
                var nuevaFila = $("#detalleOrden tr").length - 1;
                if (nuevaFila < 0) {
                    nuevaFila = 0;
                }
                $('#detalleOrden').find('tbody:last').append('<tr data-row-key="' + record.id + '">'
                                                           + '<input data-val="true" data-val-number="The field idAfiliado must be a number." data-val-required="El campo idAfiliado es obligatorio." name="[' + nuevaFila + '].idAfiliado" type="hidden" value=' + record.id + ' />'
                                                           + '<input data-val="true" data-val-number="The field idOrden must be a number." data-val-required="El campo idOrden es obligatorio." name="[' + nuevaFila + '].idOrden" type="hidden" value="' + @Model.First().idOrden + '" />'
                                                               + '<td>'
                                                               + '<input name="[' + nuevaFila + '].docnumberAfiliado" type="hidden" value="' + record.docnumber + '" />' + record.docnumber
                                                               + '</td>'
                                                               + '<td>'
                                                               + '<input name="[' + nuevaFila + '].nameAfiliado" type="hidden" value="' + record.name + '" />'
                                                               + '<input name="[' + nuevaFila + '].lastname1Afiliado" type="hidden" value="' + record.lastname1 + '" />' + record.name + ' ' + record.lastname1
                                                               + '</td>'
                                                               + '<td>'
                                                               + '<input class="form-control Monto" data-val="true" data-val-number="The field montoRecarga must be a number." data-val-required="El campo montoRecarga es obligatorio." name="[' + nuevaFila + '].montoRecarga" type="text" value="0" />                                        <span id="field_' + record.id + '"></span>'
                                                               + '</td>'
                                                               + '<td>'
                                                               + '<input name="[' + nuevaFila + '].statusDetalleOrden" type="hidden" value="" />'
                                                               + '</td>'
                                                               + '<td>'
                                                               + '<p class="ObservacionesInicial"></p>'
                                                               + '<input name="[' + nuevaFila + '].observacionesExclusion" class="form-control Observaciones" style="display: none;" type="text" value="">'
                                                               + '</td>'

                                                               + '<td>'
                                                               + '<input name="[' + nuevaFila + '].observacionesDetalle" class="form-control Motivo" type="text" value="">'                                    
                                                               + '</td>'

                                                               + '<td class="text-right" onclick="Excluir(this)">'
                                                               + '<a class="btn btn-danger btn-sm">'
                                                               + '<span class="glyphicon glyphicon-remove"></span>'
                                                               + '</a>'
                                                               + '</td>'
                                                               + '</tr>');
                    $('#numdoc').val("");
                    $('.ocultar').show();
                    $('#detalleOrden').on('input', '.Monto', function () { ValidarMontos(); });
                }
            });
        if (vacio) {
            $('#numdoc').val("");
            spanMessage('documento', "No se ha encontrado Afiliado con el Número de Documento/Cédula " + docnumber);
        }
        ValidarMontos();
    });
    }

    $('#CopiarMotivo').click(function () {
        $('.Motivo').val($('.Observaciones2').val());
    });
</script>
